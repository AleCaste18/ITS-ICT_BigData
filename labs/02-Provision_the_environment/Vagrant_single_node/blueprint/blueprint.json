{
    "configurations": [
        {
            "capacity-scheduler": {
                "properties_attributes": {},
                "properties": {
                    "yarn.scheduler.capacity.schedule-asynchronously.maximum-threads": "1",
                    "yarn.scheduler.capacity.root.acl_submit_applications": "*",
                    "yarn.scheduler.capacity.root.accessible-node-labels": "*",
                    "yarn.scheduler.capacity.default.minimum-user-limit-percent": "100",
                    "yarn.scheduler.capacity.maximum-am-resource-percent": "0.2",
                    "yarn.scheduler.capacity.root.acl_administer_queue": "*",
                    "yarn.scheduler.capacity.root.default.acl_administer_jobs": "*",
                    "yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
                    "yarn.scheduler.capacity.root.default.capacity": "100",
                    "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
                    "yarn.scheduler.capacity.root.queues": "default",
                    "yarn.scheduler.capacity.root.capacity": "100",
                    "yarn.scheduler.capacity.root.default.acl_submit_applications": "*",
                    "yarn.scheduler.capacity.root.default.maximum-capacity": "100",
                    "yarn.scheduler.capacity.schedule-asynchronously.enable": "true",
                    "yarn.scheduler.capacity.node-locality-delay": "40",
                    "yarn.scheduler.capacity.maximum-applications": "10000",
                    "yarn.scheduler.capacity.schedule-asynchronously.scheduling-interval-ms": "10",
                    "yarn.scheduler.capacity.root.default.state": "RUNNING"
                }
            }
        },
        {
            "zoo.cfg": {
                "properties_attributes": {},
                "properties": {
                    "quorum.cnxn.threads.size": "20",
                    "autopurge.purgeInterval": "24",
                    "dataDir": "/hadoop/zookeeper",
                    "autopurge.snapRetainCount": "30",
                    "clientPort": "2181",
                    "initLimit": "10",
                    "tickTime": "3000",
                    "syncLimit": "5",
                    "quorum.auth.enableSasl": "false"
                }
            }
        },
        {
            "zookeeper-log4j": {
                "properties_attributes": {},
                "properties": {
                    "zookeeper_log_max_backup_size": "10",
                    "zookeeper_log_number_of_backup_files": "10",
                    "content": "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File={{zk_log_dir}}/zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize={{zookeeper_log_max_backup_size}}MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex={{zookeeper_log_number_of_backup_files}}\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
                }
            }
        },
        {
            "hadoop-metrics2.properties": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n{% if has_ganglia_server %}\n*.period=60\n\n*.sink.ganglia.class=org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31\n*.sink.ganglia.period=10\n\n# default for supportsparse is false\n*.sink.ganglia.supportsparse=true\n\n.sink.ganglia.slope=jvm.metrics.gcCount=zero,jvm.metrics.memHeapUsedM=both\n.sink.ganglia.dmax=jvm.metrics.threadsBlocked=70,jvm.metrics.memHeapUsedM=40\n\n# Hook up to the server\nnamenode.sink.ganglia.servers={{ganglia_server_host}}:8661\ndatanode.sink.ganglia.servers={{ganglia_server_host}}:8659\njobtracker.sink.ganglia.servers={{ganglia_server_host}}:8662\ntasktracker.sink.ganglia.servers={{ganglia_server_host}}:8658\nmaptask.sink.ganglia.servers={{ganglia_server_host}}:8660\nreducetask.sink.ganglia.servers={{ganglia_server_host}}:8660\nresourcemanager.sink.ganglia.servers={{ganglia_server_host}}:8664\nnodemanager.sink.ganglia.servers={{ganglia_server_host}}:8657\nhistoryserver.sink.ganglia.servers={{ganglia_server_host}}:8666\njournalnode.sink.ganglia.servers={{ganglia_server_host}}:8654\nnimbus.sink.ganglia.servers={{ganglia_server_host}}:8649\nsupervisor.sink.ganglia.servers={{ganglia_server_host}}:8650\n\nresourcemanager.sink.ganglia.tagsForPrefix.yarn=Queue\n\n{% endif %}\n\n{% if has_metric_collector %}\n\n*.period={{metrics_collection_period}}\n*.sink.timeline.plugin.urls=file:///usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink.jar\n*.sink.timeline.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink\n*.sink.timeline.period={{metrics_collection_period}}\n*.sink.timeline.sendInterval={{metrics_report_interval}}000\n*.sink.timeline.slave.host.name={{hostname}}\n*.sink.timeline.zookeeper.quorum={{zookeeper_quorum}}\n*.sink.timeline.protocol={{metric_collector_protocol}}\n*.sink.timeline.port={{metric_collector_port}}\n*.sink.timeline.instanceId = {{cluster_name}}\n*.sink.timeline.set.instanceId = {{set_instanceId}}\n*.sink.timeline.host_in_memory_aggregation = {{host_in_memory_aggregation}}\n*.sink.timeline.host_in_memory_aggregation_port = {{host_in_memory_aggregation_port}}\n{% if is_aggregation_https_enabled %}\n*.sink.timeline.host_in_memory_aggregation_protocol = {{host_in_memory_aggregation_protocol}}\n{% endif %}\n\n# HTTPS properties\n*.sink.timeline.truststore.path = {{metric_truststore_path}}\n*.sink.timeline.truststore.type = {{metric_truststore_type}}\n*.sink.timeline.truststore.password = {{metric_truststore_password}}\n\ndatanode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nnamenode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nresourcemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}\nnodemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}\njobhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}\njournalnode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nmaptask.sink.timeline.collector.hosts={{ams_collector_hosts}}\nreducetask.sink.timeline.collector.hosts={{ams_collector_hosts}}\napplicationhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}\n\nresourcemanager.sink.timeline.tagsForPrefix.yarn=Queue\n\n{% if is_nn_client_port_configured %}\n# Namenode rpc ports customization\nnamenode.sink.timeline.metric.rpc.client.port={{nn_rpc_client_port}}\n{% endif %}\n{% if is_nn_dn_port_configured %}\nnamenode.sink.timeline.metric.rpc.datanode.port={{nn_rpc_dn_port}}\n{% endif %}\n{% if is_nn_healthcheck_port_configured %}\nnamenode.sink.timeline.metric.rpc.healthcheck.port={{nn_rpc_healthcheck_port}}\n{% endif %}\n\n{% endif %}"
                }
            }
        },
        {
            "ranger-hdfs-policymgr-ssl": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "mapred-site": {
                "properties_attributes": {},
                "properties": {
                    "mapreduce.map.speculative": "false",
                    "mapreduce.jobhistory.recovery.store.class": "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
                    "mapreduce.job.counters.max": "130",
                    "mapreduce.reduce.log.level": "INFO",
                    "mapreduce.shuffle.port": "13562",
                    "yarn.app.mapreduce.am.admin-command-opts": "-Dhdp.version=${hdp.version}",
                    "mapreduce.jobhistory.admin.acl": "*",
                    "mapreduce.job.emit-timeline-data": "true",
                    "mapreduce.jobhistory.recovery.enable": "true",
                    "mapreduce.map.log.level": "INFO",
                    "yarn.app.mapreduce.am.staging-dir": "/user",
                    "mapreduce.reduce.shuffle.merge.percent": "0.66",
                    "mapreduce.cluster.acls.enabled": "false",
                    "mapreduce.job.acl-modify-job": " ",
                    "mapreduce.output.fileoutputformat.compress": "false",
                    "mapreduce.admin.map.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
                    "mapreduce.job.reduce.slowstart.completedmaps": "0.05",
                    "mapreduce.jobhistory.http.policy": "HTTP_ONLY",
                    "mapreduce.job.queuename": "default",
                    "mapreduce.application.framework.path": "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
                    "mapreduce.application.classpath": "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
                    "mapreduce.reduce.java.opts": "-Xmx1638m",
                    "mapreduce.map.output.compress": "false",
                    "mapreduce.reduce.input.buffer.percent": "0.0",
                    "mapreduce.job.acl-view-job": " ",
                    "mapreduce.jobhistory.intermediate-done-dir": "/mr-history/tmp",
                    "yarn.app.mapreduce.am.log.level": "INFO",
                    "mapreduce.reduce.shuffle.fetch.retry.interval-ms": "1000",
                    "mapreduce.reduce.shuffle.input.buffer.percent": "0.7",
                    "mapreduce.reduce.speculative": "false",
                    "mapreduce.output.fileoutputformat.compress.type": "BLOCK",
                    "mapreduce.task.io.sort.mb": "573",
                    "mapred.local.dir": "/hadoop/mapred",
                    "mapreduce.cluster.administrators": " hadoop",
                    "mapreduce.reduce.shuffle.fetch.retry.timeout-ms": "30000",
                    "mapreduce.jobhistory.address": "%HOSTGROUP::host_group_1%:10020",
                    "mapreduce.map.sort.spill.percent": "0.7",
                    "mapreduce.map.memory.mb": "1024",
                    "mapreduce.admin.reduce.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
                    "mapreduce.jobhistory.bind-host": "0.0.0.0",
                    "mapreduce.task.timeout": "300000",
                    "mapreduce.admin.user.env": "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64",
                    "mapreduce.am.max-attempts": "2",
                    "mapreduce.reduce.memory.mb": "2048",
                    "mapreduce.framework.name": "yarn",
                    "mapreduce.reduce.shuffle.parallelcopies": "30",
                    "mapreduce.jobhistory.done-dir": "/mr-history/done",
                    "mapreduce.jobhistory.webapp.address": "%HOSTGROUP::host_group_1%:19888",
                    "mapreduce.reduce.shuffle.fetch.retry.enabled": "1",
                    "mapreduce.task.io.sort.factor": "100",
                    "mapreduce.jobhistory.recovery.store.leveldb.path": "/hadoop/mapreduce/jhs",
                    "yarn.app.mapreduce.am.command-opts": "-Xmx819m -Dhdp.version=${hdp.version}",
                    "mapreduce.map.java.opts": "-Xmx819m",
                    "yarn.app.mapreduce.am.resource.mb": "1024"
                }
            }
        },
        {
            "ranger-yarn-policymgr-ssl": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "ssl-server": {
                "properties_attributes": {},
                "properties": {
                    "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
                    "ssl.server.truststore.reload.interval": "10000",
                    "ssl.server.truststore.type": "jks",
                    "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
                    "ssl.server.keystore.type": "jks"
                }
            }
        },
        {
            "hdfs-log4j": {
                "properties_attributes": {},
                "properties": {
                    "hadoop_security_log_max_backup_size": "256",
                    "hadoop_security_log_number_of_backup_files": "20",
                    "hadoop_log_number_of_backup_files": "10",
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize={{hadoop_security_log_max_backup_size}}MB\nhadoop.security.log.maxbackupindex={{hadoop_security_log_number_of_backup_files}}\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.additivity.SecurityLogger=false\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# NameNode metrics logging.\n# The default is to retain two namenode-metrics.log files up to 64MB each.\n#\nnamenode.metrics.logger=INFO,NullAppender\nlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}\nlog4j.additivity.NameNodeMetricsLog=false\nlog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log\nlog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1\nlog4j.appender.NNMETRICSRFA.MaxFileSize=64MB\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize={{hadoop_log_max_backup_size}}MB\nlog4j.appender.RFA.MaxBackupIndex={{hadoop_log_number_of_backup_files}}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN\n\n# Adding logging for 3rd party library\nlog4j.logger.org.apache.commons.beanutils=WARN",
                    "hadoop_log_max_backup_size": "256"
                }
            }
        },
        {
            "ranger-yarn-security": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "hadoop-policy": {
                "properties_attributes": {},
                "properties": {
                    "security.inter.datanode.protocol.acl": "*",
                    "security.refresh.usertogroups.mappings.protocol.acl": "hadoop",
                    "security.admin.operations.protocol.acl": "hadoop",
                    "security.client.datanode.protocol.acl": "*",
                    "security.datanode.protocol.acl": "*",
                    "security.inter.tracker.protocol.acl": "*",
                    "security.job.client.protocol.acl": "*",
                    "security.client.protocol.acl": "*",
                    "security.job.task.protocol.acl": "*",
                    "security.refresh.policy.protocol.acl": "hadoop",
                    "security.namenode.protocol.acl": "*"
                }
            }
        },
        {
            "ranger-yarn-audit": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "container-executor": {
                "properties_attributes": {},
                "properties": {
                    "docker_trusted_registries": "",
                    "cgroup_root": "",
                    "docker_binary": "/usr/bin/docker",
                    "docker_privileged-containers_enabled": "false",
                    "docker_allowed_ro-mounts": "",
                    "docker_allowed_rw-mounts": "",
                    "content": "{#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#}\n\n#/*\n# * Licensed to the Apache Software Foundation (ASF) under one\n# * or more contributor license agreements.  See the NOTICE file\n# * distributed with this work for additional information\n# * regarding copyright ownership.  The ASF licenses this file\n# * to you under the Apache License, Version 2.0 (the\n# * \"License\"); you may not use this file except in compliance\n# * with the License.  You may obtain a copy of the License at\n# *\n# *     http://www.apache.org/licenses/LICENSE-2.0\n# *\n# * Unless required by applicable law or agreed to in writing, software\n# * distributed under the License is distributed on an \"AS IS\" BASIS,\n# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# * See the License for the specific language governing permissions and\n# * limitations under the License.\n# */\nyarn.nodemanager.local-dirs={{nm_local_dirs}}\nyarn.nodemanager.log-dirs={{nm_log_dirs}}\nyarn.nodemanager.linux-container-executor.group={{yarn_executor_container_group}}\nbanned.users=hdfs,yarn,mapred,bin\nmin.user.id={{min_user_id}}\n\n{{ '[docker]' }}\n  module.enabled={{docker_module_enabled}}\n  docker.binary={{docker_binary}}\n  docker.allowed.capabilities={{docker_allowed_capabilities}}\n  docker.allowed.devices={{docker_allowed_devices}}\n  docker.allowed.networks={{docker_allowed_networks}}\n  docker.allowed.ro-mounts={{nm_local_dirs}},{{docker_allowed_ro_mounts}}\n  docker.allowed.rw-mounts={{nm_local_dirs}},{{nm_log_dirs}},{{docker_allowed_rw_mounts}}\n  docker.privileged-containers.enabled={{docker_privileged_containers_enabled}}\n  docker.trusted.registries={{docker_trusted_registries}}\n  docker.allowed.volume-drivers={{docker_allowed_volume_drivers}}\n\n{{ '[gpu]' }}\n  module.enabled={{gpu_module_enabled}}\n\n{{ '[cgroups]' }}\n  root={{cgroup_root}}\n  yarn-hierarchy={{yarn_hierarchy}}",
                    "min_user_id": "1000",
                    "yarn_hierarchy": "",
                    "docker_allowed_volume-drivers": "",
                    "docker_allowed_devices": "",
                    "gpu_module_enabled": "false",
                    "docker_module_enabled": "false"
                }
            }
        },
        {
            "core-site": {
                "properties_attributes": {
                    "final": {
                        "fs.defaultFS": "true"
                    }
                },
                "properties": {
                    "fs.defaultFS": "hdfs://%HOSTGROUP::host_group_1%:8020",
                    "fs.s3a.multipart.size": "67108864",
                    "hadoop.http.cross-origin.allowed-methods": "GET,PUT,POST,OPTIONS,HEAD,DELETE",
                    "ipc.server.tcpnodelay": "true",
                    "fs.gs.working.dir": "/",
                    "hadoop.http.cross-origin.allowed-origins": "*",
                    "mapreduce.jobtracker.webinterface.trusted": "false",
                    "fs.gs.path.encoding": "uri-path",
                    "hadoop.http.cross-origin.max-age": "1800",
                    "hadoop.proxyuser.root.groups": "*",
                    "ipc.client.idlethreshold": "8000",
                    "hadoop.proxyuser.hdfs.groups": "*",
                    "fs.s3a.fast.upload": "true",
                    "fs.trash.interval": "360",
                    "hadoop.http.authentication.simple.anonymous.allowed": "true",
                    "hadoop.security.authorization": "false",
                    "ipc.client.connection.maxidletime": "30000",
                    "fs.gs.application.name.suffix": " (GPN:Hortonworks; version 1.0) HDP/{{version}}",
                    "hadoop.proxyuser.root.hosts": "hdp-singlenode.example.com",
                    "ha.failover-controller.active-standby-elector.zk.op.retries": "120",
                    "hadoop.http.cross-origin.allowed-headers": "X-Requested-With,Content-Type,Accept,Origin,WWW-Authenticate,Accept-Encoding,Transfer-Encoding",
                    "hadoop.security.authentication": "simple",
                    "fs.s3a.fast.upload.buffer": "disk",
                    "hadoop.proxyuser.hdfs.hosts": "*",
                    "fs.azure.user.agent.prefix": "User-Agent: APN/1.0 Hortonworks/1.0 HDP/{{version}}",
                    "hadoop.security.instrumentation.requires.admin": "false",
                    "ipc.client.connect.max.retries": "50",
                    "io.file.buffer.size": "131072",
                    "fs.s3a.user.agent.prefix": "User-Agent: APN/1.0 Hortonworks/1.0 HDP/{{version}}",
                    "net.topology.script.file.name": "/etc/hadoop/conf/topology_script.py",
                    "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
                    "hadoop.http.filter.initializers": "org.apache.hadoop.security.AuthenticationFilterInitializer,org.apache.hadoop.security.HttpCrossOriginFilterInitializer",
                    "io.serializations": "org.apache.hadoop.io.serializer.WritableSerialization"
                }
            }
        },
        {
            "yarn-hbase-log4j": {
                "properties_attributes": {},
                "properties": {
                    "hbase_log_maxbackupindex": "20",
                    "hbase_security_log_maxfilesize": "256",
                    "hbase_log_maxfilesize": "256",
                    "hbase_security_log_maxbackupindex": "20",
                    "content": "\n            # Licensed to the Apache Software Foundation (ASF) under one\n            # or more contributor license agreements.  See the NOTICE file\n            # distributed with this work for additional information\n            # regarding copyright ownership.  The ASF licenses this file\n            # to you under the Apache License, Version 2.0 (the\n            # \"License\"); you may not use this file except in compliance\n            # with the License.  You may obtain a copy of the License at\n            #\n            #     http://www.apache.org/licenses/LICENSE-2.0\n            #\n            # Unless required by applicable law or agreed to in writing, software\n            # distributed under the License is distributed on an \"AS IS\" BASIS,\n            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            # See the License for the specific language governing permissions and\n            # limitations under the License.\n\n\n            # Define some default values that can be overridden by system properties\n            hbase.root.logger=INFO,console\n            hbase.security.logger=INFO,console\n            hbase.log.dir=.\n            hbase.log.file=hbase.log\n\n            # Define the root logger to the system property \"hbase.root.logger\".\n            log4j.rootLogger=${hbase.root.logger}\n\n            # Logging Threshold\n            log4j.threshold=ALL\n\n            #\n            # Daily Rolling File Appender\n            #\n            log4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n            log4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n            # Rollver at midnight\n            log4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n            # 30-day backup\n            #log4j.appender.DRFA.MaxBackupIndex=30\n            log4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n            # Pattern format: Date LogLevel LoggerName LogMessage\n            log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n            # Rolling File Appender properties\n            hbase.log.maxfilesize={{hbase_log_maxfilesize}}MB\n            hbase.log.maxbackupindex={{hbase_log_maxbackupindex}}\n\n            # Rolling File Appender\n            log4j.appender.RFA=org.apache.log4j.RollingFileAppender\n            log4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\n            log4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\n            log4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\n            log4j.appender.RFA.layout=org.apache.log4j.PatternLayout\n            log4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n            #\n            # Security audit appender\n            #\n            hbase.security.log.file=SecurityAuth.audit\n            hbase.security.log.maxfilesize={{hbase_security_log_maxfilesize}}MB\n            hbase.security.log.maxbackupindex={{hbase_security_log_maxbackupindex}}\n            log4j.appender.RFAS=org.apache.log4j.RollingFileAppender\n            log4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\n            log4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\n            log4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\n            log4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\n            log4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n            log4j.category.SecurityLogger=${hbase.security.logger}\n            log4j.additivity.SecurityLogger=false\n            #log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n            #\n            # Null Appender\n            #\n            log4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n            #\n            # console\n            # Add \"console\" to rootlogger above if you want to use this\n            #\n            log4j.appender.console=org.apache.log4j.ConsoleAppender\n            log4j.appender.console.target=System.err\n            log4j.appender.console.layout=org.apache.log4j.PatternLayout\n            log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n            # Custom Logging levels\n\n            log4j.logger.org.apache.zookeeper=INFO\n            #log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\n            log4j.logger.org.apache.hadoop.hbase=INFO\n            # Make these two classes INFO-level. Make them DEBUG to see more zk debug.\n            log4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\n            log4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n            #log4j.logger.org.apache.hadoop.dfs=DEBUG\n            # Set this class to log INFO only otherwise its OTT\n            # Enable this to get detailed connection error/retry logging.\n            # log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n            # Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n            #log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n            # Uncomment the below if you want to remove logging of client region caching'\n            # and scan of .META. messages\n            # log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n            # log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
                }
            }
        },
        {
            "hdfs-site": {
                "properties_attributes": {
                    "final": {
                        "dfs.webhdfs.enabled": "true",
                        "dfs.namenode.http-address": "true",
                        "dfs.namenode.name.dir": "true",
                        "dfs.datanode.failed.volumes.tolerated": "true",
                        "dfs.datanode.data.dir": "true"
                    }
                },
                "properties": {
                    "dfs.replication": "3",
                    "dfs.namenode.audit.log.async": "true",
                    "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary",
                    "dfs.namenode.avoid.read.stale.datanode": "true",
                    "manage.include.files": "false",
                    "dfs.journalnode.http-address": "0.0.0.0:8480",
                    "nfs.file.dump.dir": "/tmp/.hdfs-nfs",
                    "dfs.namenode.rpc-address": "%HOSTGROUP::host_group_1%:8020",
                    "dfs.namenode.https-address": "%HOSTGROUP::host_group_1%:50470",
                    "dfs.encrypt.data.transfer.cipher.suites": "AES/CTR/NoPadding",
                    "dfs.client.read.shortcircuit.streams.cache.size": "4096",
                    "dfs.hosts.exclude": "/etc/hadoop/conf/dfs.exclude",
                    "dfs.namenode.acls.enabled": "true",
                    "dfs.namenode.accesstime.precision": "0",
                    "dfs.namenode.fslock.fair": "false",
                    "dfs.permissions.enabled": "true",
                    "dfs.permissions.ContentSummary.subAccess": "false",
                    "dfs.datanode.balance.bandwidthPerSec": "6250000",
                    "dfs.namenode.stale.datanode.interval": "30000",
                    "dfs.content-summary.limit": "5000",
                    "dfs.http.policy": "HTTP_ONLY",
                    "dfs.journalnode.https-address": "0.0.0.0:8481",
                    "dfs.datanode.du.reserved": "5365957120",
                    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
                    "dfs.datanode.ipc.address": "0.0.0.0:8010",
                    "dfs.cluster.administrators": " hdfs",
                    "dfs.datanode.max.transfer.threads": "4096",
                    "dfs.namenode.handler.count": "50",
                    "dfs.https.port": "50470",
                    "dfs.replication.max": "50",
                    "dfs.client.read.shortcircuit": "true",
                    "dfs.webhdfs.enabled": "true",
                    "dfs.namenode.http-address": "%HOSTGROUP::host_group_1%:50070",
                    "dfs.namenode.name.dir": "/hadoop/hdfs/namenode",
                    "dfs.namenode.avoid.write.stale.datanode": "true",
                    "dfs.datanode.https.address": "0.0.0.0:50475",
                    "dfs.datanode.failed.volumes.tolerated": "0",
                    "dfs.client.retry.policy.enabled": "false",
                    "hadoop.caller.context.enabled": "true",
                    "dfs.namenode.startup.delay.block.deletion.sec": "3600",
                    "dfs.block.access.token.enable": "true",
                    "dfs.datanode.data.dir": "/hadoop/hdfs/data",
                    "dfs.permissions.superusergroup": "hdfs",
                    "dfs.blocksize": "134217728",
                    "dfs.namenode.checkpoint.edits.dir": "${dfs.namenode.checkpoint.dir}",
                    "nfs.exports.allowed.hosts": "* rw",
                    "dfs.datanode.address": "0.0.0.0:50010",
                    "dfs.blockreport.initialDelay": "120",
                    "dfs.datanode.data.dir.perm": "750",
                    "dfs.namenode.write.stale.datanode.ratio": "1.0f",
                    "dfs.namenode.name.dir.restore": "true",
                    "dfs.heartbeat.interval": "3",
                    "dfs.namenode.secondary.http-address": "%HOSTGROUP::host_group_1%:50090",
                    "dfs.namenode.checkpoint.txns": "1000000",
                    "dfs.journalnode.edits.dir": "/hadoop/hdfs/journalnode",
                    "fs.permissions.umask-mode": "022",
                    "dfs.namenode.safemode.threshold-pct": "1",
                    "dfs.namenode.checkpoint.period": "21600",
                    "dfs.datanode.http.address": "0.0.0.0:50075"
                }
            }
        },
        {
            "yarn-site": {
                "properties_attributes": {
                    "hidden": {
                        "hadoop.registry.dns.bind-port": "true"
                    }
                },
                "properties": {
                    "yarn.nodemanager.resource-plugins.gpu.path-to-discovery-executables": "",
                    "yarn.resourcemanager.zk-address": "%HOSTGROUP::host_group_1%:2181",
                    "yarn.nodemanager.container-monitor.interval-ms": "3000",
                    "yarn.timeline-service.entity-group-fs-store.active-dir": "/ats/active/",
                    "hadoop.registry.dns.bind-address": "0.0.0.0",
                    "yarn.log.server.web-service.url": "http://%HOSTGROUP::host_group_1%:8188/ws/v1/applicationhistory",
                    "yarn.nodemanager.linux-container-executor.group": "hadoop",
                    "yarn.nodemanager.recovery.supervised": "true",
                    "yarn.application.classpath": "$HADOOP_CONF_DIR,{{hadoop_home}}/*,{{hadoop_home}}/lib/*,{{stack_root}}/current/hadoop-hdfs-client/*,{{stack_root}}/current/hadoop-hdfs-client/lib/*,{{stack_root}}/current/hadoop-yarn-client/*,{{stack_root}}/current/hadoop-yarn-client/lib/*",
                    "yarn.admin.acl": "activity_analyzer,yarn",
                    "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds": "3600",
                    "yarn.resourcemanager.display.per-user-apps": "true",
                    "yarn.nodemanager.remote-app-log-dir-suffix": "logs",
                    "yarn.nodemanager.address": "0.0.0.0:45454",
                    "yarn.resourcemanager.webapp.address": "%HOSTGROUP::host_group_1%:8088",
                    "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms": "300000",
                    "yarn.nodemanager.runtime.linux.allowed-runtimes": "default,docker",
                    "yarn.scheduler.maximum-allocation-vcores": "1",
                    "yarn.timeline-service.address": "%HOSTGROUP::host_group_1%:10200",
                    "yarn.timeline-service.enabled": "true",
                    "yarn.timeline-service.http-cross-origin.enabled": "true",
                    "yarn.nodemanager.aux-services": "mapreduce_shuffle,spark2_shuffle,{{timeline_collector}}",
                    "yarn.nodemanager.resource.cpu-vcores": "1",
                    "yarn.system-metricspublisher.enabled": "true",
                    "yarn.webapp.api-service.enable": "true",
                    "yarn.nodemanager.runtime.linux.docker.default-container-network": "host",
                    "yarn.nodemanager.aux-services.timeline_collector.class": "org.apache.hadoop.yarn.server.timelineservice.collector.PerNodeTimelineCollectorsAuxService",
                    "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled": "false",
                    "yarn.nodemanager.aux-services.spark_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
                    "yarn.nodemanager.log-aggregation.debug-enabled": "false",
                    "yarn.resourcemanager.zk-acl": "world:anyone:rwcda",
                    "yarn.client.nodemanager-connect.max-wait-ms": "60000",
                    "yarn.http.policy": "HTTP_ONLY",
                    "yarn.timeline-service.http-authentication.simple.anonymous.allowed": "true",
                    "yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidiadocker-v1.endpoint": "",
                    "yarn.resourcemanager.zk-state-store.parent-path": "/rmstore",
                    "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size": "10000",
                    "yarn.nodemanager.runtime.linux.docker.allowed-container-networks": "host,none,bridge",
                    "hadoop.registry.dns.zone-mask": "255.255.255.0",
                    "yarn.nodemanager.resource-plugins.gpu.docker-plugin": "",
                    "yarn.resourcemanager.admin.address": "%HOSTGROUP::host_group_1%:8141",
                    "yarn.timeline-service.generic-application-history.save-non-am-container-meta-info": "false",
                    "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage": "false",
                    "yarn.resourcemanager.resource-tracker.address": "%HOSTGROUP::host_group_1%:8025",
                    "hadoop.registry.dns.zone-subnet": "172.17.0.0",
                    "yarn.nodemanager.delete.debug-delay-sec": "0",
                    "yarn.resourcemanager.fs.state-store.retry-policy-spec": "2000, 500",
                    "yarn.timeline-service.http-authentication.type": "simple",
                    "yarn.timeline-service.ttl-enable": "true",
                    "yarn.timeline-service.entity-group-fs-store.retain-seconds": "604800",
                    "yarn.log-aggregation.retain-seconds": "2592000",
                    "yarn.nodemanager.resource.memory-mb": "3072",
                    "yarn.nodemanager.disk-health-checker.min-healthy-disks": "0.25",
                    "yarn.node-labels.enabled": "false",
                    "yarn.resourcemanager.connect.max-wait.ms": "900000",
                    "yarn.resourcemanager.zk-num-retries": "1000",
                    "yarn.scheduler.minimum-allocation-vcores": "1",
                    "yarn.nodemanager.aux-services.spark2_shuffle.classpath": "{{stack_root}}/{{spark2_version}}/spark2/aux/*",
                    "yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed": "false",
                    "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
                    "yarn.resourcemanager.system-metrics-publisher.enabled": "true",
                    "yarn.timeline-service.client.max-retries": "30",
                    "yarn.timeline-service.client.retry-interval-ms": "1000",
                    "yarn.timeline-service.store-class": "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
                    "yarn.timeline-service.bind-host": "0.0.0.0",
                    "yarn.nodemanager.container-metrics.unregister-delay-ms": "60000",
                    "yarn.timeline-service.generic-application-history.store-class": "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
                    "yarn.resourcemanager.monitor.capacity.preemption.monitoring_interval": "15000",
                    "yarn.resourcemanager.fs.state-store.uri": " ",
                    "yarn.resourcemanager.recovery.enabled": "true",
                    "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath": "",
                    "yarn.nodemanager.webapp.cross-origin.enabled": "true",
                    "yarn.resourcemanager.scheduler.address": "%HOSTGROUP::host_group_1%:8030",
                    "yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices": "",
                    "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size": "10000",
                    "yarn.timeline-service.ttl-ms": "2678400000",
                    "yarn.nodemanager.health-checker.script.timeout-ms": "60000",
                    "yarn.nodemanager.aux-services.spark2_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
                    "yarn.log.server.url": "http://%HOSTGROUP::host_group_1%:19888/jobhistory/logs",
                    "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes": "org.apache.hadoop.yarn.applications.distributedshell.DistributedShellTimelinePlugin",
                    "yarn.resourcemanager.address": "%HOSTGROUP::host_group_1%:8050",
                    "yarn.timeline-service.recovery.enabled": "true",
                    "yarn.timeline-service.reader.webapp.address": "%HOSTGROUP::host_group_1%:8198",
                    "yarn.nodemanager.recovery.dir": "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
                    "yarn.resourcemanager.scheduler.monitor.enable": "true",
                    "yarn.resourcemanager.webapp.cross-origin.enabled": "true",
                    "yarn.resourcemanager.bind-host": "0.0.0.0",
                    "yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.enabled": "true",
                    "yarn.webapp.ui2.enable": "true",
                    "yarn.nodemanager.log-aggregation.num-log-files-per-app": "30",
                    "hadoop.registry.dns.domain-name": "EXAMPLE.COM",
                    "yarn.nodemanager.admin-env": "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
                    "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size": "10",
                    "yarn.timeline-service.reader.webapp.https.address": "%HOSTGROUP::host_group_1%:8199",
                    "yarn.acl.enable": "false",
                    "manage.include.files": "false",
                    "yarn.resourcemanager.ha.enabled": "false",
                    "yarn.timeline-service.entity-group-fs-store.app-cache-size": "10",
                    "yarn.client.nodemanager-connect.retry-interval-ms": "10000",
                    "yarn.service.system-service.dir": "/services",
                    "yarn.timeline-service.version": "2.0f",
                    "yarn.timeline-service.leveldb-timeline-store.read-cache-size": "104857600",
                    "yarn.resourcemanager.placement-constraints.handler": "scheduler",
                    "yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor": "1",
                    "yarn.nodemanager.local-dirs": "/hadoop/yarn/local",
                    "yarn.timeline-service.leveldb-timeline-store.path": "/hadoop/yarn/timeline",
                    "yarn.nodemanager.recovery.enabled": "true",
                    "yarn.service.framework.path": "/hdp/apps/${hdp.version}/yarn/service-dep.tar.gz",
                    "yarn.resourcemanager.zk-timeout-ms": "10000",
                    "yarn.resourcemanager.am.max-attempts": "2",
                    "yarn.resourcemanager.state-store.max-completed-applications": "${yarn.resourcemanager.max-completed-applications}",
                    "yarn.node-labels.fs-store.root-dir": "/system/yarn/node-labels",
                    "yarn.node-labels.fs-store.retry-policy-spec": "2000, 500",
                    "yarn.nodemanager.aux-services.mapreduce_shuffle.class": "org.apache.hadoop.mapred.ShuffleHandler",
                    "yarn.log-aggregation-enable": "true",
                    "yarn.resourcemanager.work-preserving-recovery.enabled": "true",
                    "yarn.nodemanager.aux-services.spark_shuffle.classpath": "{{stack_root}}/${hdp.version}/spark/aux/*",
                    "yarn.nodemanager.resourcemanager.connect.wait.secs": "1800",
                    "yarn.resourcemanager.store.class": "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
                    "yarn.timeline-service.leveldb-state-store.path": "/hadoop/yarn/timeline",
                    "yarn.nodemanager.log.retain-seconds": "604800",
                    "yarn.timeline-service.entity-group-fs-store.done-dir": "/ats/done/",
                    "hadoop.registry.dns.enabled": "true",
                    "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage": "90",
                    "hadoop.registry.zk.quorum": "%HOSTGROUP::host_group_1%:2181",
                    "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds": "3600",
                    "yarn.timeline-service.hbase-schema.prefix": "prod.",
                    "hadoop.http.cross-origin.allowed-origins": "{{cross_origins}}",
                    "hadoop.registry.dns.bind-port": "53",
                    "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
                    "yarn.resourcemanager.nodes.exclude-path": "/etc/hadoop/conf/yarn.exclude",
                    "yarn.nodemanager.runtime.linux.docker.privileged-containers.acl": "",
                    "yarn.timeline-service.state-store-class": "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
                    "yarn.nodemanager.bind-host": "0.0.0.0",
                    "yarn.resourcemanager.hostname": "%HOSTGROUP::host_group_1%",
                    "yarn.nodemanager.resource-plugins": "",
                    "yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round": "1",
                    "yarn.timeline-service.versions": "1.5f,2.0f",
                    "yarn.resourcemanager.connect.retry-interval.ms": "30000",
                    "yarn.timeline-service.webapp.address": "%HOSTGROUP::host_group_1%:8188",
                    "yarn.scheduler.minimum-allocation-mb": "1024",
                    "yarn.timeline-service.entity-group-fs-store.summary-store": "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
                    "yarn.nodemanager.health-checker.interval-ms": "135000",
                    "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb": "1000",
                    "yarn.resourcemanager.zk-retry-interval-ms": "1000",
                    "yarn.nodemanager.runtime.linux.docker.capabilities": "\n      CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,\n      SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE",
                    "yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled": "true",
                    "yarn.nodemanager.remote-app-log-dir": "/app-logs",
                    "yarn.scheduler.maximum-allocation-mb": "3072",
                    "yarn.nodemanager.vmem-check-enabled": "false",
                    "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds": "60",
                    "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::host_group_1%:8090",
                    "yarn.timeline-service.webapp.https.address": "%HOSTGROUP::host_group_1%:8190",
                    "yarn.nodemanager.resource.percentage-physical-cpu-limit": "80",
                    "yarn.nodemanager.vmem-pmem-ratio": "2.1",
                    "yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users": "true",
                    "yarn.nodemanager.log-aggregation.compression-type": "gz",
                    "yarn.timeline-service.hbase.configuration.file": "file://{{yarn_hbase_conf_dir}}/hbase-site.xml",
                    "yarn.rm.system-metricspublisher.emit-container-events": "true",
                    "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms": "10000",
                    "yarn.nodemanager.log-dirs": "/hadoop/yarn/log",
                    "yarn.timeline-service.hbase.coprocessor.jar.hdfs.location": "{{yarn_timeline_jar_location}}"
                }
            }
        },
        {
            "ssl-client": {
                "properties_attributes": {},
                "properties": {
                    "ssl.client.truststore.reload.interval": "10000",
                    "ssl.client.keystore.location": "",
                    "ssl.client.truststore.location": "",
                    "ssl.client.truststore.type": "jks",
                    "ssl.client.keystore.type": "jks"
                }
            }
        },
        {
            "viewfs-mount-table": {
                "properties_attributes": {},
                "properties": {
                    "content": " "
                }
            }
        },
        {
            "ranger-hdfs-security": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "yarn-hbase-policy": {
                "properties_attributes": {},
                "properties": {
                    "security.masterregion.protocol.acl": "*",
                    "security.admin.protocol.acl": "*",
                    "security.client.protocol.acl": "*"
                }
            }
        },
        {
            "ranger-yarn-plugin-properties": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "hadoop-env": {
                "properties_attributes": {},
                "properties": {
                    "hadoop_heapsize": "1024",
                    "proxyuser_group": "users",
                    "hadoop_root_logger": "INFO,RFA",
                    "dtnode_heapsize": "1024m",
                    "namenode_backup_dir": "/tmp/upgrades",
                    "hdfs_user": "hdfs",
                    "hadoop_pid_dir_prefix": "/var/run/hadoop",
                    "content": "\n      # Set Hadoop-specific environment variables here.\n\n      # The only required environment variable is JAVA_HOME.  All others are\n      # optional.  When running a distributed configuration it is best to\n      # set JAVA_HOME in this file, so that it is correctly defined on\n      # remote nodes.\n\n      # The java implementation to use.  Required.\n      export JAVA_HOME={{java_home}}\n      export HADOOP_HOME_WARN_SUPPRESS=1\n\n      # Hadoop home directory\n      export HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hadoop Configuration Directory\n\n      {# this is different for HDP1 #}\n      # Path to jsvc required by secure HDP 2.0 datanode\n      export JSVC_HOME={{jsvc_path}}\n\n\n      # The maximum amount of heap to use, in MB. Default is 1000.\n      export HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\n      export HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n      # Extra Java runtime options.  Empty by default.\n      export HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n      USER=\"$(whoami)\"\n\n      # Command specific options appended to HADOOP_OPTS when specified\n      HADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\n      HADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\n\n      {% if java_version < 8 %}\n      SHARED_HDFS_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\n      export HDFS_NAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HDFS_NAMENODE_OPTS}\"\n      export HDFS_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-datanode/bin/kill-data-node\\\" -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HDFS_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\n\n      export HDFS_SECONDARYNAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HDFS_SECONDARYNAMENODE_OPTS}\"\n\n      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)\n      export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n      {% else %}\n      SHARED_HDFS_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\n      export HDFS_NAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HDFS_NAMENODE_OPTS}\"\n      export HDFS_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-datanode/bin/kill-data-node\\\" -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HDFS_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\n\n      export HDFS_SECONDARYNAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HDFS_SECONDARYNAMENODE_OPTS}\"\n\n      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)\n      export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n      {% endif %}\n\n      {% if security_enabled %}\n      export HDFS_NAMENODE_OPTS=\"$HDFS_NAMENODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_nn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      export HDFS_SECONDARYNAMENODE_OPTS=\"$HDFS_SECONDARYNAMENODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_nn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      export HDFS_DATANODE_OPTS=\"$HDFS_DATANODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_dn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      export HADOOP_JOURNALNODE_OPTS=\"$HADOOP_JOURNALNODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_jn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      {% endif %}\n\n      HDFS_NFS3_OPTS=\"-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HDFS_NFS3_OPTS}\"\n      HADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n\n      # On secure datanodes, user to run the datanode as after dropping privileges\n      export HDFS_DATANODE_SECURE_USER=${HDFS_DATANODE_SECURE_USER:-{{hadoop_secure_dn_user}}}\n\n      # Extra ssh options.  Empty by default.\n      export HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n      # Where log files are stored.  $HADOOP_HOME/logs by default.\n      export HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n      # Where log files are stored in the secure data environment.\n      export HADOOP_SECURE_LOG_DIR=${HADOOP_SECURE_LOG_DIR:-{{hdfs_log_dir_prefix}}/$HDFS_DATANODE_SECURE_USER}\n\n      # File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n      # export HADOOP_WORKERS=${HADOOP_HOME}/conf/slaves\n\n      # host:path where hadoop code should be rsync'd from.  Unset by default.\n      # export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n      # Seconds to sleep between slave commands.  Unset by default.  This\n      # can be useful in large clusters, where, e.g., slave rsyncs can\n      # otherwise arrive faster than the master can service them.\n      # export HADOOP_WORKER_SLEEP=0.1\n\n      # The directory where pid files are stored. /tmp by default.\n      export HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\n      export HADOOP_SECURE_PID_DIR=${HADOOP_SECURE_PID_DIR:-{{hadoop_pid_dir_prefix}}/$HDFS_DATANODE_SECURE_USER}\n\n      YARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n      # A string representing this instance of hadoop. $USER by default.\n      export HADOOP_IDENT_STRING=$USER\n\n      # The scheduling priority for daemon processes.  See 'man nice'.\n\n      # export HADOOP_NICENESS=10\n\n      # Add database libraries\n      JAVA_JDBC_LIBS=\"\"\n      if [ -d \"/usr/share/java\" ]; then\n      for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n      do\n      JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n      done\n      fi\n\n      # Add libraries to the hadoop classpath - some may not need a colon as they already include it\n      export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}\n\n      # Setting path to hdfs command line\n      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n      # Mostly required for hadoop 2.0\n      export JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:{{hadoop_lib_home}}/native/Linux-{{architecture}}-64\n\n      {% if zk_principal_user is defined %}\n      HADOOP_OPTS=\"-Dzookeeper.sasl.client.username={{zk_principal_user}} $HADOOP_OPTS\"\n      {% endif %}\n\n      export HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n\n\n      # Fix temporary bug, when ulimit from conf files is not picked up, without full relogin.\n      # Makes sense to fix only when runing DN as root\n      if [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HDFS_DATANODE_SECURE_USER\" ]; then\n      {% if is_datanode_max_locked_memory_set %}\n      ulimit -l {{datanode_max_locked_memory}}\n      {% endif %}\n      ulimit -n {{hdfs_user_nofile_limit}}\n      fi\n      # Enable ACLs on zookeper znodes if required\n      {% if hadoop_zkfc_opts is defined %}\n      export HDFS_ZKFC_OPTS=\"{{hadoop_zkfc_opts}} $HDFS_ZKFC_OPTS\"\n      {% endif %}",
                    "hdfs_log_dir_prefix": "/var/log/hadoop",
                    "namenode_opt_newsize": "128m",
                    "namenode_heapsize": "1024m",
                    "hdfs_tmp_dir": "/tmp",
                    "namenode_opt_maxpermsize": "256m",
                    "nfsgateway_heapsize": "1024",
                    "hdfs_user_nofile_limit": "128000",
                    "keyserver_host": " ",
                    "keyserver_port": "",
                    "hdfs_user_nproc_limit": "65536",
                    "namenode_opt_maxnewsize": "128m",
                    "namenode_opt_permsize": "128m"
                }
            }
        },
        {
            "yarn-hbase-env": {
                "properties_attributes": {},
                "properties": {
                    "yarn_hbase_client_containers": "1",
                    "yarn_hbase_client_memory": "1536",
                    "yarn_hbase_master_cpu": "1",
                    "yarn_hbase_regionserver_containers": "1",
                    "yarn_hbase_heap_memory_factor": "0.8",
                    "content": "\n      # Set environment variables here.\n\n      # The java implementation to use. Java 1.6 required.\n      export JAVA_HOME={{java64_home}}\n\n      # HBase Configuration directory\n      export HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{yarn_hbase_conf_dir}}}\n\n      # Extra Java CLASSPATH elements. Optional.\n      export HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n      # The maximum amount of heap to use. Default is left to JVM default.\n      # export HBASE_HEAPSIZE=4G\n\n      # Extra Java runtime options.\n      # Below are what we set by default. May only work with SUN JVM.\n      # For more on why as well as other possible settings,\n      # see http://wiki.apache.org/hadoop/PerformanceTuning\n      export SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{yarn_hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n      # Uncomment below to enable java garbage collection logging.\n      # export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n      # Uncomment and adjust to enable JMX exporting\n      # See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n      # More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n      #\n      # export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n      # If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n      # export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n      # export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n      # File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\n      export HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n      # Extra ssh options. Empty by default.\n      # export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n      # Where log files are stored. $HBASE_HOME/logs by default.\n      export HBASE_LOG_DIR=${HBASE_LOG_DIR:-{{yarn_hbase_log_dir}}}\n\n      # A string representing this instance of hbase. $USER by default.\n      # export HBASE_IDENT_STRING=$USER\n\n      # The scheduling priority for daemon processes. See 'man nice'.\n      # export HBASE_NICENESS=10\n\n      # The directory where pid files are stored. /tmp by default.\n      export HBASE_PID_DIR=${HBASE_PID_DIR:-{{yarn_hbase_pid_dir}}}\n\n      # Seconds to sleep between slave commands. Unset by default. This\n      # can be useful in large clusters, where, e.g., slave rsyncs can\n      # otherwise arrive faster than the master can service them.\n      # export HBASE_SLAVE_SLEEP=0.1\n\n      # Tell HBase whether it should manage it's own instance of Zookeeper or not.\n      export HBASE_MANAGES_ZK=false\n\n      {% if java_version < 8 %}\n      JDK_DEPENDED_OPTS=\"-XX:PermSize=128m -XX:MaxPermSize=128m\"\n      {% endif %}\n\n      export HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile=$HBASE_LOG_DIR/hs_err_pid%p.log -Djava.io.tmpdir={{yarn_hbase_java_io_tmpdir}}\"\n      export HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{yarn_hbase_master_heapsize}} $JDK_DEPENDED_OPTS\"\n      export HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -XX:CMSInitiatingOccupancyFraction=70 -XX:ReservedCodeCacheSize=256m -Xms{{yarn_hbase_regionserver_heapsize}} -Xmx{{yarn_hbase_regionserver_heapsize}} $JDK_DEPENDED_OPTS\"\n\n      {% if security_enabled %}\n      export HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{yarn_hbase_master_jaas_file}}\"\n      export HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{yarn_hbase_regionserver_jaas_file}}\"\n      {% endif %}",
                    "yarn_hbase_pid_dir_prefix": "/var/run/hadoop-yarn-hbase",
                    "yarn_hbase_regionserver_cpu": "1",
                    "hbase_java_io_tmpdir": "/tmp",
                    "use_external_hbase": "false",
                    "yarn_hbase_log_level": "INFO",
                    "yarn_hbase_master_memory": "4096",
                    "yarn_hbase_master_containers": "1",
                    "yarn_hbase_system_service_queue_name": "default",
                    "yarn_hbase_system_service_launch_mode": "sync",
                    "is_hbase_system_service_launch": "false",
                    "yarn_hbase_client_cpu": "1",
                    "yarn_hbase_regionserver_memory": "4096"
                }
            }
        },
        {
            "yarn-env": {
                "properties_attributes": {},
                "properties": {
                    "yarn_cgroups_enabled": "false",
                    "yarn_user_nproc_limit": "65536",
                    "yarn_log_dir_prefix": "/var/log/hadoop-yarn",
                    "apptimelineserver_heapsize": "8072",
                    "yarn_user_nofile_limit": "32768",
                    "content": "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport HADOOP_LOG_DIR={{yarn_log_dir}}\nexport HADOOP_SECURE_LOG_DIR={{yarn_log_dir}}\nexport HADOOP_PID_DIR={{yarn_pid_dir}}\nexport HADOOP_SECURE_PID_DIR={{yarn_pid_dir}}\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\nexport JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n# We need to add the EWMA and RFA appender for the yarn daemons only;\n# however, HADOOP_ROOT_LOGGER is shared by the yarn client and the\n# daemons. This is restrict the EWMA appender to daemons only.\nexport HADOOP_LOGLEVEL=${HADOOP_LOGLEVEL:-INFO}\nexport HADOOP_ROOT_LOGGER=${HADOOP_ROOT_LOGGER:-INFO,console}\nexport HADOOP_DAEMON_ROOT_LOGGER=${HADOOP_DAEMON_ROOT_LOGGER:-${HADOOP_LOGLEVEL},EWMA,RFA}\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n#echo \"run java in $JAVA_HOME\"\nJAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\necho \"Error: JAVA_HOME is not set.\"\nexit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\nJAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either HADOOP_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as HADOOP_OPTS\n# and therefore may override any similar flags set in HADOOP_OPTS\n{% if security_enabled %}\nexport YARN_RESOURCEMANAGER_OPTS=\"-Djava.security.auth.login.config={{yarn_jaas_file}}\"\n{% endif %}\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either HADOOP_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the timeline server using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either HADOOP_OPTS\n# and/or YARN_TIMELINESERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n{% if security_enabled %}\nexport YARN_TIMELINESERVER_OPTS=\"-Djava.security.auth.login.config={{yarn_ats_jaas_file}}\"\n{% endif %}\n\n{% if security_enabled %}\nexport YARN_TIMELINEREADER_OPTS=\"-Djava.security.auth.login.config={{yarn_ats_jaas_file}}\"\n{% endif %}\n\n{% if security_enabled %}\nexport YARN_REGISTRYDNS_OPTS=\"-Djava.security.auth.login.config={{yarn_registry_dns_jaas_file}}\"\n{% endif %}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as HADOOP_OPTS\n# and therefore may override any similar flags set in HADOOP_OPTS\n{% if security_enabled %}\nexport YARN_NODEMANAGER_OPTS=\"-Djava.security.auth.login.config={{yarn_nm_jaas_file}} -Dsun.security.krb5.rcache=none\"\n{% endif %}\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$HADOOP_LOG_DIR\" = \"\" ]; then\nHADOOP_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$HADOOP_LOGFILE\" = \"\" ]; then\nHADOOP_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\nYARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n# YARN now uses specific subcommand options of the pattern (command)_(subcommand)_OPTS for every\n# component. Because of this, HADDOP_OPTS is now used as a simple way to specify common properties\n# between all YARN components.\nHADOOP_OPTS=\"$HADOOP_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nHADOOP_OPTS=\"$HADOOP_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\nHADOOP_OPTS=\"$HADOOP_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}\"\n\n{% if security_enabled %}\nHADOOP_OPTS=\"$HADOOP_OPTS -Djavax.security.auth.useSubjectCredsOnly=false\"\n{% endif %}\n\n{% if rm_security_opts is defined %}\nYARN_RESOURCEMANAGER_OPTS=\"{{rm_security_opts}} $YARN_RESOURCEMANAGER_OPTS\"\n{% endif %}\n\nexport YARN_NODEMANAGER_OPTS=\"$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT\"\nexport YARN_RESOURCEMANAGER_OPTS=\"$YARN_RESOURCEMANAGER_OPTS -Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY -Drm.audit.logger=INFO,RMAUDIT\"\n\n{% if registry_dns_needs_privileged_access %}\n# If the DNS server is configured to use the standard privileged port 53,\n# the environment variables YARN_REGISTRYDNS_SECURE_USER and\n# YARN_REGISTRYDNS_SECURE_EXTRA_OPTS must be set.\nexport YARN_REGISTRYDNS_SECURE_USER={{yarn_user}}\nexport YARN_REGISTRYDNS_SECURE_EXTRA_OPTS=\"-jvm server\"\n{% endif %}",
                    "is_supported_yarn_ranger": "true",
                    "service_check.queue.name": "default",
                    "resourcemanager_heapsize": "1024",
                    "registry.dns.bind-port": "53",
                    "yarn_pid_dir_prefix": "/var/run/hadoop-yarn",
                    "yarn_user": "yarn",
                    "min_user_id": "1000",
                    "yarn_heapsize": "1024",
                    "yarn_ats_user": "yarn-ats",
                    "nodemanager_heapsize": "1024"
                }
            }
        },
        {
            "ranger-hdfs-audit": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "ranger-hdfs-plugin-properties": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "yarn-hbase-site": {
                "properties_attributes": {},
                "properties": {
                    "hbase.coprocessor.master.classes": "",
                    "hfile.block.cache.size": "0.4",
                    "hbase.master.port": "17000",
                    "hbase.hstore.blockingStoreFiles": "10",
                    "hbase.zookeeper.useMulti": "true",
                    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
                    "zookeeper.session.timeout": "90000",
                    "hbase.master.info.bindAddress": "0.0.0.0",
                    "hbase.coprocessor.regionserver.classes": "",
                    "hbase.master.ui.readonly": "false",
                    "hbase.bucketcache.size": "",
                    "hbase.local.dir": "${hbase.tmp.dir}/local",
                    "hbase.hregion.majorcompaction.jitter": "0.50",
                    "hbase.hregion.memstore.flush.size": "134217728",
                    "hbase.client.retries.number": "7",
                    "hbase.hregion.max.filesize": "10737418240",
                    "zookeeper.recovery.retry": "6",
                    "hbase.hstore.compaction.max": "10",
                    "hbase.regionserver.global.memstore.size": "0.4",
                    "hbase.zookeeper.quorum": "{{zookeeper_quorum_hosts}}",
                    "hbase.regionserver.info.port": "17030",
                    "hbase.client.keyvalue.maxsize": "1048576",
                    "hbase.tmp.dir": "/tmp/hbase-${user.name}",
                    "hbase.rpc.protection": "authentication",
                    "zookeeper.znode.parent": "/atsv2-hbase-unsecure",
                    "hbase.master.info.port": "17010",
                    "hbase.rootdir": "/atsv2/hbase/data",
                    "hbase.client.scanner.caching": "100",
                    "hbase.cluster.distributed": "true",
                    "hbase.hregion.majorcompaction": "604800000",
                    "hbase.hstore.compactionThreshold": "3",
                    "hbase.master.wait.on.regionservers.timeout": "30000",
                    "hbase.hregion.memstore.mslab.enabled": "true",
                    "hbase.master.namespace.init.timeout": "2400000",
                    "hbase.rpc.timeout": "90000",
                    "hbase.superuser": "yarn",
                    "hbase.coprocessor.region.classes": "",
                    "hbase.security.authentication": "simple",
                    "hbase.regionserver.handler.count": "30",
                    "hbase.bucketcache.percentage.in.combinedcache": "",
                    "hbase.regionserver.port": "17020",
                    "hbase.security.authorization": "false",
                    "hbase.zookeeper.property.clientPort": "{{zookeeper_clientPort}}",
                    "hbase.regionserver.executor.openregion.threads": "20",
                    "hbase.defaults.for.version.skip": "true",
                    "hbase.hregion.memstore.block.multiplier": "4",
                    "hbase.bucketcache.ioengine": ""
                }
            }
        },
        {
            "zookeeper-env": {
                "properties_attributes": {},
                "properties": {
                    "zk_log_dir": "/var/log/zookeeper",
                    "zk_user": "zookeeper",
                    "zk_pid_dir": "/var/run/zookeeper",
                    "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}} -Dzookeeper.sasl.client.username={{zk_principal_user}}\"\n{% endif %}",
                    "zk_server_heapsize": "1024m"
                }
            }
        },
        {
            "yarn-log4j": {
                "properties_attributes": {},
                "properties": {
                    "yarn_rm_summary_log_max_backup_size": "256",
                    "yarn_rm_summary_log_number_of_backup_files": "20",
                    "content": "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize={{yarn_rm_summary_log_max_backup_size}}MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex={{yarn_rm_summary_log_number_of_backup_files}}\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n\n# Appender for viewing information for errors and warnings\nyarn.ewma.cleanupInterval=300\nyarn.ewma.messageAgeLimitSeconds=86400\nyarn.ewma.maxUniqueMessages=250\nlog4j.appender.EWMA=org.apache.hadoop.yarn.util.Log4jWarningErrorMetricsAppender\nlog4j.appender.EWMA.cleanupInterval=${yarn.ewma.cleanupInterval}\nlog4j.appender.EWMA.messageAgeLimitSeconds=${yarn.ewma.messageAgeLimitSeconds}\nlog4j.appender.EWMA.maxUniqueMessages=${yarn.ewma.maxUniqueMessages}\n\n# Audit logging for ResourceManager\nrm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=false\nlog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.log\nlog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd\n\n# Audit logging for NodeManager\nnm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=false\nlog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.log\nlog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
                }
            }
        },
        {
            "mapred-env": {
                "properties_attributes": {},
                "properties": {
                    "jobhistory_heapsize": "900",
                    "mapred_user_nofile_limit": "32768",
                    "mapred_user": "mapred",
                    "mapred_user_nproc_limit": "65536",
                    "mapred_pid_dir_prefix": "/var/run/hadoop-mapreduce",
                    "mapred_log_dir_prefix": "/var/log/hadoop-mapreduce",
                    "content": "\n      # export JAVA_HOME=/home/y/libexec/jdk1.8.0/\n\n      export HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\n      # We need to add the RFA appender for the mr daemons only;\n      # however, HADOOP_MAPRED_LOGGER is shared by the mapred client and the\n      # daemons. This will restrict the RFA appender to daemons only.\n      export HADOOP_LOGLEVEL=${HADOOP_LOGLEVEL:-INFO}\n      export HADOOP_ROOT_LOGGER=${HADOOP_ROOT_LOGGER:-INFO,console}\n      export HADOOP_DAEMON_ROOT_LOGGER=${HADOOP_DAEMON_ROOT_LOGGER:-${HADOOP_LOGLEVEL},RFA}\n\n      {% if security_enabled %}\n      export MAPRED_HISTORYSERVER_OPTS=\"-Djava.security.auth.login.config={{mapred_jaas_file}}  -Djavax.security.auth.useSubjectCredsOnly=false\"\n      {% endif %}\n\n      #export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n      #export HADOOP_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n      #export HADOOP_NICENESS= #The scheduling priority for daemons. Defaults to 0.\n      export HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n      export HADOOP_OPTS=\"-Djava.io.tmpdir={{hadoop_java_io_tmpdir}} $HADOOP_OPTS\"\n      export JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n      # History server logs\n      export HADOOP_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n      # History server pid\n      export HADOOP_PID_DIR={{mapred_pid_dir_prefix}}/$USER"
                }
            }
        },
        {
            "cluster-env": {
                "properties_attributes": {},
                "properties": {
                    "hide_yarn_memory_widget": "false",
                    "enable_external_ranger": "false",
                    "recovery_max_count": "6",
                    "manage_dirs_on_root": "true",
                    "managed_hdfs_resource_property_names": "",
                    "recovery_retry_interval": "5",
                    "sysprep_skip_lzo_package_operations": "false",
                    "sysprep_skip_hive_schema_create": "false",
                    "stack_features": "{\n  \"HDP\": {\n    \"stack_features\": [\n      {\n        \"name\": \"snappy\",\n        \"description\": \"Snappy compressor/decompressor support\",\n        \"min_version\": \"2.0.0.0\",\n        \"max_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"lzo\",\n        \"description\": \"LZO libraries support\",\n        \"min_version\": \"2.2.1.0\"\n      },\n      {\n        \"name\": \"express_upgrade\",\n        \"description\": \"Express upgrade support\",\n        \"min_version\": \"2.1.0.0\"\n      },\n      {\n        \"name\": \"rolling_upgrade\",\n        \"description\": \"Rolling upgrade support\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"kafka_acl_migration_support\",\n        \"description\": \"ACL migration support\",\n        \"min_version\": \"2.3.4.0\"\n      },\n      {\n        \"name\": \"secure_zookeeper\",\n        \"description\": \"Protect ZNodes with SASL acl in secure clusters\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"config_versioning\",\n        \"description\": \"Configurable versions support\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"datanode_non_root\",\n        \"description\": \"DataNode running as non-root support (AMBARI-7615)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"remove_ranger_hdfs_plugin_env\",\n        \"description\": \"HDFS removes Ranger env files (AMBARI-14299)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"ranger\",\n        \"description\": \"Ranger Service support\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_tagsync_component\",\n        \"description\": \"Ranger Tagsync component support (AMBARI-14383)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"phoenix\",\n        \"description\": \"Phoenix Service support\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"nfs\",\n        \"description\": \"NFS support\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"tez_for_spark\",\n        \"description\": \"Tez dependency for Spark\",\n        \"min_version\": \"2.2.0.0\",\n        \"max_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"timeline_state_store\",\n        \"description\": \"Yarn application timeline-service supports state store property (AMBARI-11442)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"copy_tarball_to_hdfs\",\n        \"description\": \"Copy tarball to HDFS support (AMBARI-12113)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"spark_16plus\",\n        \"description\": \"Spark 1.6+\",\n        \"min_version\": \"2.4.0.0\"\n      },\n      {\n        \"name\": \"spark_thriftserver\",\n        \"description\": \"Spark Thrift Server\",\n        \"min_version\": \"2.3.2.0\"\n      },\n      {\n        \"name\": \"storm_ams\",\n        \"description\": \"Storm AMS integration (AMBARI-10710)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"kafka_listeners\",\n        \"description\": \"Kafka listeners (AMBARI-10984)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_kerberos\",\n        \"description\": \"Kafka Kerberos support (AMBARI-10984)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"pig_on_tez\",\n        \"description\": \"Pig on Tez support (AMBARI-7863)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_non_root\",\n        \"description\": \"Ranger Usersync as non-root user (AMBARI-10416)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_audit_db_support\",\n        \"description\": \"Ranger Audit to DB support\",\n        \"min_version\": \"2.2.0.0\",\n        \"max_version\": \"2.4.99.99\"\n      },\n      {\n        \"name\": \"accumulo_kerberos_user_auth\",\n        \"description\": \"Accumulo Kerberos User Auth (AMBARI-10163)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"knox_versioned_data_dir\",\n        \"description\": \"Use versioned data dir for Knox (AMBARI-13164)\",\n        \"min_version\": \"2.3.2.0\"\n      },\n      {\n        \"name\": \"knox_sso_topology\",\n        \"description\": \"Knox SSO Topology support (AMBARI-13975)\",\n        \"min_version\": \"2.3.8.0\"\n      },\n      {\n        \"name\": \"atlas_rolling_upgrade\",\n        \"description\": \"Rolling upgrade support for Atlas\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"oozie_admin_user\",\n        \"description\": \"Oozie install user as an Oozie admin user (AMBARI-7976)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_create_hive_tez_configs\",\n        \"description\": \"Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_setup_shared_lib\",\n        \"description\": \"Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_host_kerberos\",\n        \"description\": \"Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"falcon_extensions\",\n        \"description\": \"Falcon Extension\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_upgrade_schema\",\n        \"description\": \"Hive metastore upgrade schema support (AMBARI-11176)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server_interactive\",\n        \"description\": \"Hive server interactive support (AMBARI-15573)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hive_purge_table\",\n        \"description\": \"Hive purge table support (AMBARI-12260)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server2_kerberized_env\",\n        \"description\": \"Hive server2 working on kerberized environment (AMBARI-13749)\",\n        \"min_version\": \"2.2.3.0\",\n        \"max_version\": \"2.2.5.0\"\n      },\n      {\n        \"name\": \"hive_env_heapsize\",\n        \"description\": \"Hive heapsize property defined in hive-env (AMBARI-12801)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_hsm_support\",\n        \"description\": \"Ranger KMS HSM support (AMBARI-15752)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_log4j_support\",\n        \"description\": \"Ranger supporting log-4j properties (AMBARI-15681)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_kerberos_support\",\n        \"description\": \"Ranger Kerberos support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_site_support\",\n        \"description\": \"Hive Metastore site support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_password_jceks\",\n        \"description\": \"Saving Ranger Usersync credentials in jceks\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_install_infra_client\",\n        \"description\": \"Ambari Infra Service support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"falcon_atlas_support_2_3\",\n        \"description\": \"Falcon Atlas integration support for 2.3 stack\",\n        \"min_version\": \"2.3.99.0\",\n        \"max_version\": \"2.4.0.0\"\n      },\n      {\n        \"name\": \"falcon_atlas_support\",\n        \"description\": \"Falcon Atlas integration\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hbase_home_directory\",\n        \"description\": \"Hbase home directory in HDFS needed for HBASE backup\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"spark_livy\",\n        \"description\": \"Livy as slave component of spark\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"spark_livy2\",\n        \"description\": \"Livy2 as slave component of Spark2\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_ranger_plugin_support\",\n        \"description\": \"Atlas Ranger plugin support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"atlas_conf_dir_in_path\",\n        \"description\": \"Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon\",\n        \"min_version\": \"2.3.0.0\",\n        \"max_version\": \"2.4.99.99\"\n      },\n      {\n        \"name\": \"atlas_upgrade_support\",\n        \"description\": \"Atlas supports express and rolling upgrades\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"atlas_hook_support\",\n        \"description\": \"Atlas support for hooks in Hive, Storm, Falcon, and Sqoop\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_pid_support\",\n        \"description\": \"Ranger Service support pid generation AMBARI-16756\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_pid_support\",\n        \"description\": \"Ranger KMS Service support pid generation\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_admin_password_change\",\n        \"description\": \"Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_setup_db_on_start\",\n        \"description\": \"Allows setup of ranger db and java patches to be called multiple times on each START\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"storm_metrics_apache_classes\",\n        \"description\": \"Metrics sink for Storm that uses Apache class names\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"spark_java_opts_support\",\n        \"description\": \"Allow Spark to generate java-opts file\",\n        \"min_version\": \"2.2.0.0\",\n        \"max_version\": \"2.4.0.0\"\n      },\n      {\n        \"name\": \"atlas_hbase_setup\",\n        \"description\": \"Use script to create Atlas tables in Hbase and set permissions for Atlas user.\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_hive_plugin_jdbc_url\",\n        \"description\": \"Handle Ranger hive repo config jdbc url change for stack 2.5 (AMBARI-18386)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"zkfc_version_advertised\",\n        \"description\": \"ZKFC advertise version\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"phoenix_core_hdfs_site_required\",\n        \"description\": \"HDFS and CORE site required for Phoenix\",\n        \"max_version\": \"2.5.9.9\"\n      },\n      {\n        \"name\": \"ranger_tagsync_ssl_xml_support\",\n        \"description\": \"Ranger Tagsync ssl xml support.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"ranger_xml_configuration\",\n        \"description\": \"Ranger code base support xml configurations\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_ranger_plugin_support\",\n        \"description\": \"Ambari stack changes for Ranger Kafka Plugin (AMBARI-11299)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"yarn_ranger_plugin_support\",\n        \"description\": \"Implement Stack changes for Ranger Yarn Plugin integration (AMBARI-10866)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_solr_config_support\",\n        \"description\": \"Showing Ranger solrconfig.xml on UI\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"hive_interactive_atlas_hook_required\",\n        \"description\": \"Registering Atlas Hook for Hive Interactive.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_install_hook_package_support\",\n        \"description\": \"Stop installing packages from 2.6\",\n        \"max_version\": \"2.5.9.9\"\n      },\n      {\n        \"name\": \"atlas_hdfs_site_on_namenode_ha\",\n        \"description\": \"Need to create hdfs-site under atlas-conf dir when Namenode-HA is enabled.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"core_site_for_ranger_plugins\",\n        \"description\": \"Adding core-site.xml in when Ranger plugin is enabled for Storm, Kafka, and Knox.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"secure_ranger_ssl_password\",\n        \"description\": \"Securing Ranger Admin and Usersync SSL and Trustore related passwords in jceks\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_ssl\",\n        \"description\": \"Ranger KMS SSL properties in ambari stack\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_hdfs_site_on_namenode_ha\",\n        \"description\": \"Need to create hdfs-site under atlas-conf dir when Namenode-HA is enabled.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_core_site_support\",\n        \"description\": \"Need to create core-site under Atlas conf directory.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"toolkit_config_update\",\n        \"description\": \"Support separate input and output for toolkit configuration\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"nifi_encrypt_config\",\n        \"description\": \"Encrypt sensitive properties written to nifi property file\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"tls_toolkit_san\",\n        \"description\": \"Support subject alternative name flag\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"admin_toolkit_support\",\n        \"description\": \"Supports the nifi admin toolkit\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"nifi_jaas_conf_create\",\n        \"description\": \"Create NIFI jaas configuration when kerberos is enabled\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"registry_remove_rootpath\",\n        \"description\": \"Registry remove root path setting\",\n        \"min_version\": \"2.6.3.0\"\n      },\n      {\n        \"name\": \"nifi_encrypted_authorizers_config\",\n        \"description\": \"Support encrypted authorizers.xml configuration for version 3.1 onwards\",\n        \"min_version\": \"2.6.5.0\"\n      },\n      {\n        \"name\": \"multiple_env_sh_files_support\",\n        \"description\": \"This feature is supported by RANGER and RANGER_KMS service to remove multiple env sh files during upgrade to stack 3.0\",\n        \"max_version\": \"2.6.99.99\"\n      },\n      {\n        \"name\": \"registry_allowed_resources_support\",\n        \"description\": \"Registry allowed resources\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_rewriteuri_filter_support\",\n        \"description\": \"Registry RewriteUri servlet filter\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_support_schema_migrate\",\n        \"description\": \"Support schema migrate in registry for version 3.1 onwards\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"sam_support_schema_migrate\",\n        \"description\": \"Support schema migrate in SAM for version 3.1 onwards\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"sam_storage_core_in_registry\",\n        \"description\": \"Storage core module moved to registry\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"sam_db_file_storage\",\n        \"description\": \"DB based file storage in SAM\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"kafka_extended_sasl_support\",\n        \"description\": \"Support SASL PLAIN and GSSAPI\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_support_db_user_creation\",\n        \"description\": \"Supports registry's database and user creation on the fly\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"streamline_support_db_user_creation\",\n        \"description\": \"Supports Streamline's database and user creation on the fly\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"nifi_auto_client_registration\",\n        \"description\": \"Supports NiFi's client registration in runtime\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_all_admin_change_default_password\",\n        \"description\": \"Supports Ranger All admin's password change in one go instead of multiple calls\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"kafka_env_include_ranger_script\",\n        \"description\": \"Need to include Ranger Kafka plugin script if stack version is lower than 3.1.0.0\",\n        \"max_version\": \"3.1.0.99\"\n      },\n      {\n        \"name\": \"ranger_support_security_zone_feature\",\n        \"description\": \"Need to add zoneName field in Ranger Audit Solr Collection\",\n        \"min_version\": \"3.1.1.0\"\n      }\n    ]\n  }\n}",
                    "namenode_rolling_restart_timeout": "4200",
                    "stack_tools": "{\n  \"HDP\": {\n    \"stack_selector\": [\n      \"hdp-select\",\n      \"/usr/bin/hdp-select\",\n      \"hdp-select\"\n    ],\n    \"conf_selector\": [\n      \"conf-select\",\n      \"/usr/bin/conf-select\",\n      \"conf-select\"\n    ]\n  }\n}",
                    "repo_ubuntu_template": "{{package_type}} {{base_url}} {{components}}",
                    "stack_root": "{\"HDP\":\"/usr/hdp\"}",
                    "fetch_nonlocal_groups": "true",
                    "one_dir_per_partition": "false",
                    "kerberos_domain": "EXAMPLE.COM",
                    "stack_packages": "{\n  \"HDP\": {\n    \"stack-select\": {\n      \"ACCUMULO\": {\n        \"ACCUMULO_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-client\",\n          \"INSTALL\": [\n            \"accumulo-client\"\n          ],\n          \"PATCH\": [\n            \"accumulo-client\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_GC\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-gc\",\n          \"INSTALL\": [\n            \"accumulo-gc\"\n          ],\n          \"PATCH\": [\n            \"accumulo-gc\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-gc\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-master\",\n          \"INSTALL\": [\n            \"accumulo-master\"\n          ],\n          \"PATCH\": [\n            \"accumulo-master\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-master\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_MONITOR\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-monitor\",\n          \"INSTALL\": [\n            \"accumulo-monitor\"\n          ],\n          \"PATCH\": [\n            \"accumulo-monitor\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-monitor\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_TRACER\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-tracer\",\n          \"INSTALL\": [\n            \"accumulo-tracer\"\n          ],\n          \"PATCH\": [\n            \"accumulo-tracer\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-tracer\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_TSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-tablet\",\n          \"INSTALL\": [\n            \"accumulo-tablet\"\n          ],\n          \"PATCH\": [\n            \"accumulo-tablet\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-tablet\",\n            \"accumulo-client\"\n          ]\n        }\n      },\n      \"ATLAS\": {\n        \"ATLAS_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"atlas-client\",\n          \"INSTALL\": [\n            \"atlas-client\"\n          ],\n          \"PATCH\": [\n            \"atlas-client\"\n          ],\n          \"STANDARD\": [\n            \"atlas-client\"\n          ]\n        },\n        \"ATLAS_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"atlas-server\",\n          \"INSTALL\": [\n            \"atlas-server\"\n          ],\n          \"PATCH\": [\n            \"atlas-server\"\n          ],\n          \"STANDARD\": [\n            \"atlas-server\"\n          ]\n        }\n      },\n      \"DRUID\": {\n        \"DRUID_COORDINATOR\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-coordinator\",\n          \"INSTALL\": [\n            \"druid-coordinator\"\n          ],\n          \"PATCH\": [\n            \"druid-coordinator\"\n          ],\n          \"STANDARD\": [\n            \"druid-coordinator\"\n          ]\n        },\n        \"DRUID_OVERLORD\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-overlord\",\n          \"INSTALL\": [\n            \"druid-overlord\"\n          ],\n          \"PATCH\": [\n            \"druid-overlord\"\n          ],\n          \"STANDARD\": [\n            \"druid-overlord\"\n          ]\n        },\n        \"DRUID_HISTORICAL\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-historical\",\n          \"INSTALL\": [\n            \"druid-historical\"\n          ],\n          \"PATCH\": [\n            \"druid-historical\"\n          ],\n          \"STANDARD\": [\n            \"druid-historical\"\n          ]\n        },\n        \"DRUID_BROKER\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-broker\",\n          \"INSTALL\": [\n            \"druid-broker\"\n          ],\n          \"PATCH\": [\n            \"druid-broker\"\n          ],\n          \"STANDARD\": [\n            \"druid-broker\"\n          ]\n        },\n        \"DRUID_MIDDLEMANAGER\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-middlemanager\",\n          \"INSTALL\": [\n            \"druid-middlemanager\"\n          ],\n          \"PATCH\": [\n            \"druid-middlemanager\"\n          ],\n          \"STANDARD\": [\n            \"druid-middlemanager\"\n          ]\n        },\n        \"DRUID_ROUTER\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-router\",\n          \"INSTALL\": [\n            \"druid-router\"\n          ],\n          \"PATCH\": [\n            \"druid-router\"\n          ],\n          \"STANDARD\": [\n            \"druid-router\"\n          ]\n        }\n      },\n      \"HBASE\": {\n        \"HBASE_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hbase-client\",\n          \"INSTALL\": [\n            \"hbase-client\"\n          ],\n          \"PATCH\": [\n            \"hbase-client\"\n          ],\n          \"STANDARD\": [\n            \"hbase-client\",\n            \"phoenix-client\",\n            \"hadoop-client\"\n          ]\n        },\n        \"HBASE_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"hbase-master\",\n          \"INSTALL\": [\n            \"hbase-master\"\n          ],\n          \"PATCH\": [\n            \"hbase-master\"\n          ],\n          \"STANDARD\": [\n            \"hbase-master\"\n          ]\n        },\n        \"HBASE_REGIONSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hbase-regionserver\",\n          \"INSTALL\": [\n            \"hbase-regionserver\"\n          ],\n          \"PATCH\": [\n            \"hbase-regionserver\"\n          ],\n          \"STANDARD\": [\n            \"hbase-regionserver\"\n          ]\n        },\n        \"PHOENIX_QUERY_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"phoenix-server\",\n          \"INSTALL\": [\n            \"phoenix-server\"\n          ],\n          \"PATCH\": [\n            \"phoenix-server\"\n          ],\n          \"STANDARD\": [\n            \"phoenix-server\"\n          ]\n        }\n      },\n      \"HDFS\": {\n        \"DATANODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-datanode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-datanode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-datanode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-datanode\"\n          ]\n        },\n        \"HDFS_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-client\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-client\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        },\n        \"NAMENODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-namenode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-namenode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-namenode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-namenode\"\n          ]\n        },\n        \"NFS_GATEWAY\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-nfs3\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-nfs3\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-nfs3\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-nfs3\"\n          ]\n        },\n        \"JOURNALNODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-journalnode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-journalnode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-journalnode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-journalnode\"\n          ]\n        },\n        \"SECONDARY_NAMENODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-secondarynamenode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-secondarynamenode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-secondarynamenode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-secondarynamenode\"\n          ]\n        },\n        \"ZKFC\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-zkfc\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-zkfc\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-zkfc\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-zkfc\"\n          ]\n        }\n      },\n      \"HIVE\": {\n        \"HIVE_METASTORE\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-metastore\",\n          \"INSTALL\": [\n            \"hive-metastore\"\n          ],\n          \"PATCH\": [\n            \"hive-metastore\"\n          ],\n          \"STANDARD\": [\n            \"hive-metastore\"\n          ]\n        },\n        \"HIVE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-server2\",\n          \"INSTALL\": [\n            \"hive-server2\"\n          ],\n          \"PATCH\": [\n            \"hive-server2\"\n          ],\n          \"STANDARD\": [\n            \"hive-server2\"\n          ]\n        },\n        \"HIVE_SERVER_INTERACTIVE\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-server2-hive\",\n          \"INSTALL\": [\n            \"hive-server2-hive\"\n          ],\n          \"PATCH\": [\n            \"hive-server2-hive\"\n          ],\n          \"STANDARD\": [\n            \"hive-server2-hive\"\n          ]\n        },\n        \"HIVE_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-client\",\n          \"INSTALL\": [\n            \"hive-client\"\n          ],\n          \"PATCH\": [\n            \"hive-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"KAFKA\": {\n        \"KAFKA_BROKER\": {\n          \"STACK-SELECT-PACKAGE\": \"kafka-broker\",\n          \"INSTALL\": [\n            \"kafka-broker\"\n          ],\n          \"PATCH\": [\n            \"kafka-broker\"\n          ],\n          \"STANDARD\": [\n            \"kafka-broker\"\n          ]\n        }\n      },\n      \"KNOX\": {\n        \"KNOX_GATEWAY\": {\n          \"STACK-SELECT-PACKAGE\": \"knox-server\",\n          \"INSTALL\": [\n            \"knox-server\"\n          ],\n          \"PATCH\": [\n            \"knox-server\"\n          ],\n          \"STANDARD\": [\n            \"knox-server\"\n          ]\n        }\n      },\n      \"MAPREDUCE2\": {\n        \"HISTORYSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-mapreduce-historyserver\",\n          \"INSTALL\": [\n            \"hadoop-mapreduce-historyserver\"\n          ],\n          \"PATCH\": [\n            \"hadoop-mapreduce-historyserver\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-mapreduce-historyserver\"\n          ]\n        },\n        \"MAPREDUCE2_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-mapreduce-client\",\n          \"INSTALL\": [\n            \"hadoop-mapreduce-client\"\n          ],\n          \"PATCH\": [\n            \"hadoop-mapreduce-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"OOZIE\": {\n        \"OOZIE_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"oozie-client\",\n          \"INSTALL\": [\n            \"oozie-client\"\n          ],\n          \"PATCH\": [\n            \"oozie-client\"\n          ],\n          \"STANDARD\": [\n            \"oozie-client\"\n          ]\n        },\n        \"OOZIE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"oozie-server\",\n          \"INSTALL\": [\n            \"oozie-client\",\n            \"oozie-server\"\n          ],\n          \"PATCH\": [\n            \"oozie-server\",\n            \"oozie-client\"\n          ],\n          \"STANDARD\": [\n            \"oozie-client\",\n            \"oozie-server\"\n          ]\n        }\n      },\n      \"PIG\": {\n        \"PIG\": {\n          \"STACK-SELECT-PACKAGE\": \"pig-client\",\n          \"INSTALL\": [\n            \"pig-client\"\n          ],\n          \"PATCH\": [\n            \"pig-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"RANGER\": {\n        \"RANGER_ADMIN\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-admin\",\n          \"INSTALL\": [\n            \"ranger-admin\"\n          ],\n          \"PATCH\": [\n            \"ranger-admin\"\n          ],\n          \"STANDARD\": [\n            \"ranger-admin\"\n          ]\n        },\n        \"RANGER_TAGSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-tagsync\",\n          \"INSTALL\": [\n            \"ranger-tagsync\"\n          ],\n          \"PATCH\": [\n            \"ranger-tagsync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-tagsync\"\n          ]\n        },\n        \"RANGER_USERSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-usersync\",\n          \"INSTALL\": [\n            \"ranger-usersync\"\n          ],\n          \"PATCH\": [\n            \"ranger-usersync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-usersync\"\n          ]\n        }\n      },\n      \"RANGER_KMS\": {\n        \"RANGER_KMS_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-kms\",\n          \"INSTALL\": [\n            \"ranger-kms\"\n          ],\n          \"PATCH\": [\n            \"ranger-kms\"\n          ],\n          \"STANDARD\": [\n            \"ranger-kms\"\n          ]\n        }\n      },\n      \"SPARK2\": {\n        \"LIVY2_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"livy2-client\",\n          \"INSTALL\": [\n            \"livy2-client\"\n          ],\n          \"PATCH\": [\n            \"livy2-client\"\n          ],\n          \"STANDARD\": [\n            \"livy2-client\"\n          ]\n        },\n        \"LIVY2_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"livy2-server\",\n          \"INSTALL\": [\n            \"livy2-server\"\n          ],\n          \"PATCH\": [\n            \"livy2-server\"\n          ],\n          \"STANDARD\": [\n            \"livy2-server\"\n          ]\n        },\n        \"SPARK2_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"spark2-client\",\n          \"INSTALL\": [\n            \"spark2-client\",\n            \"livy2-client\"\n          ],\n          \"PATCH\": [\n            \"spark2-client\",\n            \"livy2-client\",\n            \"hive_warehouse_connector\"\n          ],\n          \"STANDARD\": [\n            \"spark2-client\",\n            \"livy2-client\",\n            \"hive_warehouse_connector\"\n          ]\n        },\n        \"SPARK2_JOBHISTORYSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"spark2-historyserver\",\n          \"INSTALL\": [\n            \"spark2-historyserver\"\n          ],\n          \"PATCH\": [\n            \"spark2-historyserver\"\n          ],\n          \"STANDARD\": [\n            \"spark2-historyserver\"\n          ]\n        },\n        \"SPARK2_THRIFTSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"spark2-thriftserver\",\n          \"INSTALL\": [\n            \"spark2-thriftserver\"\n          ],\n          \"PATCH\": [\n            \"spark2-thriftserver\"\n          ],\n          \"STANDARD\": [\n            \"spark2-thriftserver\"\n          ]\n        }\n      },\n      \"SQOOP\": {\n        \"SQOOP\": {\n          \"STACK-SELECT-PACKAGE\": \"sqoop-client\",\n          \"INSTALL\": [\n            \"sqoop-client\"\n          ],\n          \"PATCH\": [\n            \"sqoop-client\"\n          ],\n          \"STANDARD\": [\n            \"sqoop-client\"\n          ]\n        }\n      },\n      \"STORM\": {\n        \"NIMBUS\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-nimbus\",\n          \"INSTALL\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"PATCH\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ]\n        },\n        \"SUPERVISOR\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-supervisor\",\n          \"INSTALL\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ],\n          \"PATCH\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ]\n        },\n        \"DRPC_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        },\n        \"STORM_UI_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        }\n      },\n      \"SUPERSET\": {\n        \"SUPERSET\": {\n          \"STACK-SELECT-PACKAGE\": \"superset\",\n          \"INSTALL\": [\n            \"superset\"\n          ],\n          \"PATCH\": [\n            \"superset\"\n          ],\n          \"STANDARD\": [\n            \"superset\"\n          ]\n        }\n      },\n      \"TEZ\": {\n        \"TEZ_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"tez-client\",\n          \"INSTALL\": [\n            \"tez-client\"\n          ],\n          \"PATCH\": [\n            \"tez-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"YARN\": {\n        \"APP_TIMELINE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-timelineserver\",\n          \"INSTALL\": [\n            \"hadoop-yarn-timelineserver\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-timelineserver\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-timelineserver\"\n          ]\n        },\n        \"TIMELINE_READER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-timelinereader\",\n          \"INSTALL\": [\n            \"hadoop-yarn-timelinereader\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-timelinereader\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-timelinereader\"\n          ]\n        },\n        \"NODEMANAGER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-nodemanager\",\n          \"INSTALL\": [\n            \"hadoop-yarn-nodemanager\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-nodemanager\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-nodemanager\"\n          ]\n        },\n        \"RESOURCEMANAGER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-resourcemanager\",\n          \"INSTALL\": [\n            \"hadoop-yarn-resourcemanager\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-resourcemanager\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-resourcemanager\"\n          ]\n        },\n        \"YARN_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-client\",\n          \"INSTALL\": [\n            \"hadoop-yarn-client\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        },\n        \"YARN_REGISTRY_DNS\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-registrydns\",\n          \"INSTALL\": [\n            \"hadoop-yarn-registrydns\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-registrydns\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-registrydns\"\n          ]\n        }\n      },\n      \"ZEPPELIN\": {\n        \"ZEPPELIN_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"zeppelin-server\",\n          \"INSTALL\": [\n            \"zeppelin-server\"\n          ],\n          \"PATCH\": [\n            \"zeppelin-server\"\n          ],\n          \"STANDARD\": [\n            \"zeppelin-server\"\n          ]\n        }\n      },\n      \"ZOOKEEPER\": {\n        \"ZOOKEEPER_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-client\",\n          \"INSTALL\": [\n            \"zookeeper-client\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-client\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-client\"\n          ]\n        },\n        \"ZOOKEEPER_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-server\",\n          \"INSTALL\": [\n            \"zookeeper-server\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-server\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-server\"\n          ]\n        }\n      }\n    },\n    \"conf-select\": {\n      \"accumulo\": [\n        {\n          \"conf_dir\": \"/etc/accumulo/conf\",\n          \"current_dir\": \"{0}/current/accumulo-client/conf\",\n          \"component\": \"accumulo-client\"\n        }\n      ],\n      \"atlas\": [\n        {\n          \"conf_dir\": \"/etc/atlas/conf\",\n          \"current_dir\": \"{0}/current/atlas-client/conf\",\n          \"component\": \"atlas-client\"\n        }\n      ],\n      \"druid\": [\n        {\n          \"conf_dir\": \"/etc/druid/conf\",\n          \"current_dir\": \"{0}/current/druid-overlord/conf\",\n          \"component\": \"druid-overlord\"\n        }\n      ],\n      \"hadoop\": [\n        {\n          \"conf_dir\": \"/etc/hadoop/conf\",\n          \"current_dir\": \"{0}/current/hadoop-client/conf\",\n          \"component\": \"hadoop-client\"\n        }\n      ],\n      \"hbase\": [\n        {\n          \"conf_dir\": \"/etc/hbase/conf\",\n          \"current_dir\": \"{0}/current/hbase-client/conf\",\n          \"component\": \"hbase-client\"\n        }\n      ],\n      \"hive\": [\n        {\n          \"conf_dir\": \"/etc/hive/conf\",\n          \"current_dir\": \"{0}/current/hive-client/conf\",\n          \"component\": \"hive-client\"\n        }\n      ],\n      \"hive2\": [\n        {\n          \"conf_dir\": \"/etc/hive2/conf\",\n          \"current_dir\": \"{0}/current/hive-server2-hive/conf\",\n          \"component\": \"hive-server2-hive\"\n        }\n      ],\n      \"hive-hcatalog\": [\n        {\n          \"conf_dir\": \"/etc/hive-webhcat/conf\",\n          \"prefix\": \"/etc/hive-webhcat\",\n          \"current_dir\": \"{0}/current/hive-webhcat/etc/webhcat\",\n          \"component\": \"hive-webhcat\"\n        },\n        {\n          \"conf_dir\": \"/etc/hive-hcatalog/conf\",\n          \"prefix\": \"/etc/hive-hcatalog\",\n          \"current_dir\": \"{0}/current/hive-webhcat/etc/hcatalog\",\n          \"component\": \"hive-webhcat\"\n        }\n      ],\n      \"kafka\": [\n        {\n          \"conf_dir\": \"/etc/kafka/conf\",\n          \"current_dir\": \"{0}/current/kafka-broker/conf\",\n          \"component\": \"kafka-broker\"\n        }\n      ],\n      \"knox\": [\n        {\n          \"conf_dir\": \"/etc/knox/conf\",\n          \"current_dir\": \"{0}/current/knox-server/conf\",\n          \"component\": \"knox-server\"\n        }\n      ],\n      \"livy2\": [\n        {\n          \"conf_dir\": \"/etc/livy2/conf\",\n          \"current_dir\": \"{0}/current/livy2-client/conf\",\n          \"component\": \"livy2-client\"\n        }\n      ],\n      \"nifi\": [\n        {\n          \"conf_dir\": \"/etc/nifi/conf\",\n          \"current_dir\": \"{0}/current/nifi/conf\",\n          \"component\": \"nifi\"\n        }\n      ],\n      \"oozie\": [\n        {\n          \"conf_dir\": \"/etc/oozie/conf\",\n          \"current_dir\": \"{0}/current/oozie-client/conf\",\n          \"component\": \"oozie-client\"\n        }\n      ],\n      \"phoenix\": [\n        {\n          \"conf_dir\": \"/etc/phoenix/conf\",\n          \"current_dir\": \"{0}/current/phoenix-client/conf\",\n          \"component\": \"phoenix-client\"\n        }\n      ],\n      \"pig\": [\n        {\n          \"conf_dir\": \"/etc/pig/conf\",\n          \"current_dir\": \"{0}/current/pig-client/conf\",\n          \"component\": \"pig-client\"\n        }\n      ],\n      \"ranger-admin\": [\n        {\n          \"conf_dir\": \"/etc/ranger/admin/conf\",\n          \"current_dir\": \"{0}/current/ranger-admin/conf\",\n          \"component\": \"ranger-admin\"\n        }\n      ],\n      \"ranger-kms\": [\n        {\n          \"conf_dir\": \"/etc/ranger/kms/conf\",\n          \"current_dir\": \"{0}/current/ranger-kms/conf\",\n          \"component\": \"ranger-kms\"\n        }\n      ],\n      \"ranger-tagsync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/tagsync/conf\",\n          \"current_dir\": \"{0}/current/ranger-tagsync/conf\",\n          \"component\": \"ranger-tagsync\"\n        }\n      ],\n      \"ranger-usersync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/usersync/conf\",\n          \"current_dir\": \"{0}/current/ranger-usersync/conf\",\n          \"component\": \"ranger-usersync\"\n        }\n      ],\n      \"spark2\": [\n        {\n          \"conf_dir\": \"/etc/spark2/conf\",\n          \"current_dir\": \"{0}/current/spark2-client/conf\",\n          \"component\": \"spark2-client\"\n        }\n      ],\n      \"sqoop\": [\n        {\n          \"conf_dir\": \"/etc/sqoop/conf\",\n          \"current_dir\": \"{0}/current/sqoop-client/conf\",\n          \"component\": \"sqoop-client\"\n        }\n      ],\n      \"storm\": [\n        {\n          \"conf_dir\": \"/etc/storm/conf\",\n          \"current_dir\": \"{0}/current/storm-client/conf\",\n          \"component\": \"storm-client\"\n        }\n      ],\n      \"superset\": [\n        {\n          \"conf_dir\": \"/etc/superset/conf\",\n          \"current_dir\": \"{0}/current/superset/conf\",\n          \"component\": \"superset\"\n        }\n      ],\n      \"tez\": [\n        {\n          \"conf_dir\": \"/etc/tez/conf\",\n          \"current_dir\": \"{0}/current/tez-client/conf\",\n          \"component\": \"tez-client\"\n        }\n      ],\n      \"zeppelin\": [\n        {\n          \"conf_dir\": \"/etc/zeppelin/conf\",\n          \"current_dir\": \"{0}/current/zeppelin-server/conf\",\n          \"component\": \"zeppelin-server\"\n        }\n      ],\n      \"zookeeper\": [\n        {\n          \"conf_dir\": \"/etc/zookeeper/conf\",\n          \"current_dir\": \"{0}/current/zookeeper-client/conf\",\n          \"component\": \"zookeeper-client\"\n        }\n      ]\n    },\n    \"conf-select-patching\": {\n      \"ACCUMULO\": {\n        \"packages\": [\"accumulo\"]\n      },\n      \"ATLAS\": {\n        \"packages\": [\"atlas\"]\n      },\n      \"DRUID\": {\n        \"packages\": [\"druid\"]\n      },\n      \"FLUME\": {\n        \"packages\": [\"flume\"]\n      },\n      \"HBASE\": {\n        \"packages\": [\"hbase\"]\n      },\n      \"HDFS\": {\n        \"packages\": []\n      },\n      \"HIVE\": {\n        \"packages\": [\"hive\", \"hive-hcatalog\", \"hive2\", \"tez_hive2\"]\n      },\n      \"KAFKA\": {\n        \"packages\": [\"kafka\"]\n      },\n      \"KNOX\": {\n        \"packages\": [\"knox\"]\n      },\n      \"MAPREDUCE2\": {\n        \"packages\": []\n      },\n      \"OOZIE\": {\n        \"packages\": [\"oozie\"]\n      },\n      \"PIG\": {\n        \"packages\": [\"pig\"]\n      },\n      \"R4ML\": {\n        \"packages\": []\n      },\n      \"RANGER\": {\n        \"packages\": [\"ranger-admin\", \"ranger-usersync\", \"ranger-tagsync\"]\n      },\n      \"RANGER_KMS\": {\n        \"packages\": [\"ranger-kms\"]\n      },\n      \"SPARK2\": {\n        \"packages\": [\"spark2\", \"livy2\"]\n      },\n      \"SQOOP\": {\n        \"packages\": [\"sqoop\"]\n      },\n      \"STORM\": {\n        \"packages\": [\"storm\", \"storm-slider-client\"]\n      },\n      \"SUPERSET\": {\n        \"packages\": [\"superset\"]\n      },\n      \"SYSTEMML\": {\n        \"packages\": []\n      },\n      \"TEZ\": {\n        \"packages\": [\"tez\"]\n      },\n      \"TITAN\": {\n        \"packages\": []\n      },\n      \"YARN\": {\n        \"packages\": []\n      },\n      \"ZEPPELIN\": {\n        \"packages\": [\"zeppelin\"]\n      },\n      \"ZOOKEEPER\": {\n        \"packages\": [\"zookeeper\"]\n      }\n    },\n    \"upgrade-dependencies\" : {\n      \"ATLAS\": [\"STORM\"],\n      \"HIVE\": [\"TEZ\", \"MAPREDUCE2\", \"SQOOP\"],\n      \"TEZ\": [\"HIVE\"],\n      \"MAPREDUCE2\": [\"HIVE\"],\n      \"OOZIE\": [\"MAPREDUCE2\"]\n    }\n  }\n}",
                    "namenode_rolling_restart_safemode_exit_timeout": "3600",
                    "ignore_bad_mounts": "false",
                    "user_group": "hadoop",
                    "sysprep_skip_setup_jce": "false",
                    "override_uid": "true",
                    "security_enabled": "false",
                    "sysprep_skip_copy_fast_jar_hdfs": "false",
                    "agent_mounts_ignore_list": "",
                    "recovery_lifetime_max_count": "1024",
                    "recovery_type": "AUTO_START",
                    "repo_suse_rhel_template": "[{{repo_id}}]\nname={{repo_id}}\n{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}\n\npath=/\nenabled=1\ngpgcheck=0",
                    "sysprep_skip_create_users_and_groups": "false",
                    "sysprep_skip_copy_tarballs_hdfs": "false",
                    "sysprep_skip_copy_oozie_share_lib_to_hdfs": "false",
                    "recovery_enabled": "true",
                    "smokeuser": "ambari-qa",
                    "smokeuser_keytab": "/etc/security/keytabs/smokeuser.headless.keytab",
                    "sysprep_skip_oozie_schema_create": "false",
                    "alerts_repeat_tolerance": "1",
                    "recovery_window_in_minutes": "60",
                    "stack_name": "HDP",
                    "ignore_groupsusers_create": "false"
                }
            }
        },
        {
            "resource-types": {
                "properties_attributes": {},
                "properties": {
                    "yarn.resource-types.yarn.io_gpu.maximum-allocation": "8",
                    "yarn.resource-types": ""
                }
            }
        }
    ],
    "host_groups": [
        {
            "components": [
                {
                    "name": "APP_TIMELINE_SERVER"
                },
                {
                    "name": "NODEMANAGER"
                },
                {
                    "name": "YARN_CLIENT"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "HISTORYSERVER"
                },
                {
                    "name": "NAMENODE"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "YARN_REGISTRY_DNS"
                },
                {
                    "name": "TIMELINE_READER"
                },
                {
                    "name": "SECONDARY_NAMENODE"
                },
                {
                    "name": "MAPREDUCE2_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "AMBARI_SERVER"
                },
                {
                    "name": "DATANODE"
                },
                {
                    "name": "RESOURCEMANAGER"
                }
            ],
            "configurations": [],
            "name": "host_group_1",
            "cardinality": "1"
        }
    ],
    "settings": [
        {
            "recovery_settings": [
                {
                    "recovery_enabled": "false"
                }
            ]
        },
        {
            "service_settings": []
        },
        {
            "component_settings": []
        }
    ],
    "Blueprints": {
        "stack_name": "HDP",
        "stack_version": "3.1"
    }
}